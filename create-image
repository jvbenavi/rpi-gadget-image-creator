#!/usr/bin/expect -f
set timeout -1

set drver "Windows"
#set drver "Linux"

proc slurp {file} {
    set fh [open $file r]
    set ret [read $fh]
    close $fh
    return $ret
}
set imageName [lindex $argv 0]

if {[string trimleft $imageName] eq ""} {
  puts "No Image file provided"
  exit
}

set cwd [file normalize [file dirname $argv0]]
set imagePath [file join $cwd $imageName]
puts $imageName
puts $imagePath\n
if {$drver eq "Windows"} {
  puts "gadget for Windows host"
} else {
  puts "gadget for Linux/Mac host"
}

spawn docker run -i --rm -v $imagePath:/sdcard/filesystem.img lukechilds/dockerpi:vm

expect "login: "
send "pi\n"
expect "Password: "
send "raspberry\n"

expect "$ "
send "sudo apt-get update\n"
expect "$ "
send "sudo apt-get -y install dnsmasq git autossh\n"
expect "$ "
send "sudo apt-get clean\n"

expect "$ "
send "sudo su -\n"

expect "# "
send "cd /usr/local/\n"
expect "# "
send "git clone https://github.com/jvbenavi/lowendscript.git\n"

set file [slurp "etc/dnsmasq.d/usb0"]
expect "# "
send "cat <<EOF >> /etc/dnsmasq.d/usb0\n"
send "$file\n"
send "EOF\n"

set file [slurp "etc/network/interfaces.d/usb0"]
expect "# "
send "cat <<EOF >> /etc/network/interfaces.d/usb0\n"
send "$file\n"
send "EOF\n"

expect "# "
send "touch /boot/ssh\n"

expect "# "
send "echo dtoverlay=dwc2 >> /boot/config.txt\n"

if {$drver eq "Windows"} {

  expect "# "
  send "sed -i 's/$/ modules-load=dwc2,g_ether/' /boot/cmdline.txt \n"

} else { 

  expect "# "
  send "sed -i 's/$/ modules-load=dwc2/' /boot/cmdline.txt \n"

  set file [slurp "usr/local/sbin/usb-gadget.sh"]
  expect "# "
  send "cat <<EOF >> /usr/local/sbin/usb-gadget.sh\n"
  send "$file\n"
  send "EOF\n"
  expect "# "
  send "chmod +x /usr/local/sbin/usb-gadget.sh\n"

  set file [slurp "lib/systemd/system/usbgadget.service"]
  expect "# "
  send "cat <<EOF >> /lib/systemd/system/usbgadget.service\n"
  send "$file\n"
  send "EOF\n"
  expect "# "
  send "systemctl enable usbgadget.service\n"

  expect "# "
  send "echo libcomposite >> /etc/modules\n"

}

expect "# "
send "echo denyinterfaces usb0 >> /etc/dhcpcd.conf\n"

set file [slurp "etc/network/if-up.d/reverse_tun"]
expect "# "
send "cat <<EOF >> /etc/network/if-up.d/reverse_tun\n" 
send "$file\n"
send "EOF\n"
expect "# "
send "chmod +x /etc/network/if-up.d/reverse_tun\n"

set file [slurp "etc/wpa_supplicant/wpa_supplicant.conf"]
expect "# "
send "cat <<EOF >> /etc/wpa_supplicant/wpa_supplicant.conf\n" 
send "$file\n"
send "EOF\n"
expect "# "
send "chmod +x /etc/wpa_supplicant/wpa_supplicant.conf\n"

expect "# "
send "poweroff\n"

interact
